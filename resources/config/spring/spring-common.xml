<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd	
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true"
	default-autowire="byName">
	
	<!-- 加入Aspectj配置 -->  
    <aop:aspectj-autoproxy/>
    <bean id="aop" class="com.incon.framework.aop.Aop" />
    
	<!-- 自动搜索@Component , @Service , @Repository等标注的类 不搜索@Controller的类 -->
	<!-- 自动扫描组件，这里要把web下面的 controller去除，他们是在spring3-servlet.xml中配置的，如果不去除会影响事务管理的。 -->
	<context:component-scan base-package="com.incon" annotation-config="true">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
		
 
	
	<!-- enable autowire -->
	<context:annotation-config />

	<!-- service层的属性和配置文件读入 ,多个用逗号隔开 -->
	<!-- controller层的属性和配置文件读入 ,多个用逗号隔开-->
	<context:property-placeholder location="classpath:/config/ibatis/jdbc.properties,classpath:/config/others/config.properties" />
	
	<!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
 	<bean class="com.incon.framework.util.SpringContextHolder" lazy-init="false" />

	<!-- 数据连接事务 -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="proxool" />
	</bean>	
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true" />
	<!-- 配置SQLMap文件路径 -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">  
		<property name="configLocations" >
			<list>
				<value>classpath:config/ibatis/ibatis-config.xml</value>
<!--   				<value>classpath:sqlmap/xk/*SqlMap.xml</value>  -->
			</list>
		</property>
		<property name="lobHandler">   
			<ref local="oracleLobHandler" />
		</property> 
		<property name="dataSource" ref="proxool"/>
	</bean>  
	<bean id="transactionManagerRootProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="proxyTargetClass">
			<value>false</value>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="select*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	<!-- 数据库Lob类型数据处理 -->
	<bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" lazy-init="true" ></bean>
	
	<!-- 数据库Lob类型数据处理 -->
	<bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">   
		<property name="nativeJdbcExtractor">   
			<ref local="nativeJdbcExtractor" />   
		</property>   
	</bean>

	<!-- 连接事务的注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	 
 	 
	<!-- 数据库连接池 -->
	<import resource="classpath:/config/spring/spring-pool.xml" />
	<!-- 验证码 -->
	<import resource="classpath:/config/spring/spring-securitycode.xml" />
	<!-- web services begin-->
	<context:component-scan base-package="com.incon.project.webservice.*" annotation-config="true"/>
	<!-- XFire start --> 
	<import resource="classpath:org/codehaus/xfire/spring/xfire.xml" />  
	<bean id="webAnnotations" class="org.codehaus.xfire.annotations.jsr181.Jsr181WebAnnotations" />  
	<bean id="jsr181HandlerMapping"  class="org.codehaus.xfire.spring.remoting.Jsr181HandlerMapping">  
    	<property name="xfire" ref="xfire" />  
    	<property name="webAnnotations" ref="webAnnotations" />  
	</bean>  
	<!-- XFire end --> 
	<!-- web services end-->	
</beans>